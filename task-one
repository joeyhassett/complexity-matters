from bridges.bridges import *
from bridges.line_chart import *
import sys
import array

def main():

    # create the Bridges object, set credentials
    bridges = Bridges(2, "Your Username", "Your API Key")

    # set title, description
    bridges.set_title("Complexity Matters")
    bridges.set_description("The purpose of this assignment is to understand why algorithms are judged by their Big-Oh notations rather than a more precise model, or runtime measurement")

    plot = LineChart()
    plot.title = "Task One"
    plot.x_label = "n"
    plot.y_label = "Time in Seconds"
    
    # set the data
    x1 = [1, 2, 3, 4, 5, 6, 7, 8, 9, 10000, 12500, 15000, 17500, 20000, 22500, 25000, 27500, 30000, 32500, 35000, 37500, 40000, 42500, 45000, 47500, 50000, 52500, 55000, 57500, 60000, 62500, 65000, 67500, 70000, 72500, 75000, 80000, 85000, 90000, 95000, 100000]
    y1 = [0.01, 0.02, 0.03, 0.04, 0.05, 0.06, 0.07, 0.08, 0.09, 100, 125, 150, 175, 200, 225, 250, 275, 300, 325, 350, 375, 400, 425, 450, 475, 500, 525, 550, 575, 600, 625, 650, 675, 700, 725, 750, 800, 850, 900, 950, 1000]
    plot.set_data_series("10^4 n instructions on a machine at 1 MHz", x1, y1)
    
    x2 = [1, 2, 3, 4, 5, 6, 7, 8, 9, 10000, 12500, 15000, 17500, 20000, 22500, 25000, 27500, 30000, 32500, 35000, 37500, 40000, 42500, 45000, 47500, 50000, 52500, 55000, 57500, 60000, 62500, 65000, 67500, 70000, 72500, 75000, 80000, 85000, 90000, 95000, 100000]
    y2 = [0.05, 0.1, 0.15, 0.2, 0.25, 0.3, 0.35, 0.4, 0.45, 500, 625, 750, 875, 1000, 1125, 1250, 1375, 1500, 1625, 1750, 1875, 2000, 2125, 2250, 2375, 2500, 2625, 2750, 2875, 3000, 3125, 3250, 3375, 3500, 3625, 3750, 4000, 4250, 4500, 4750, 5000]
    plot.set_data_series("5.10^4 n instructions on a machine at 1MHz", x2, y2)
    
    x3 = [1, 10000, 20000, 30000, 40000, 50000, 60000, 70000, 80000, 90000, 100000]
    y3 = [0.001, 100, 400, 900, 1600, 2500, 3600, 4900, 6400, 8100, 10000]
    plot.set_data_series("10^2 n^2 instruction on a machine at 100MHz", x3, y3)
    
    bridges.set_data_structure(plot)
    bridges.visualize()

if __name__ == "__main__":
    main()
